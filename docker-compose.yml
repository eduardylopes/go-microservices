version: '3'

services:
  broker-service:
    build:
      context: ./broker-service
    restart: always
    ports:
      - '8080:80'
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./logger-service
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_URI: 'mongodb://admin:password@mongo:27017'

  authentication-service:
    build:
      context: ./authentication-service
    restart: always
    ports:
      - '8081:80'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_URI: 'postgres://postgres:password@postgres/users?sslmode=disable&timezone=UTC&connect_timeout=5'

  front-end:
    build:
      context: ./front-end
    restart: always
    ports:
      - '3000:3000'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: 'http://localhost:8080'

  mailer-service:
    build:
      context: ./mailer-service
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ''
      MAIL_PASSWORD: ''
      FROM_NAME: 'Eduardy Lopes'
      FROM_ADDRESS: eduardylopes@example.com

  listener-service:
    build:
      context: ./listener-service
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.2'
    ports:
      - '5432:5432'
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo'
    ports:
      - '27017:27017'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '1025:1025'
      - '8025:8025'

  rabbitmq:
    image: 'rabbitmq:3.12.11-alpine'
    ports:
      - '5672:5672'
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
